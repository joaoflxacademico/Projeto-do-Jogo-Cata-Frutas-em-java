package cata_frutas;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.nio.file.attribute.GroupPrincipal;
import java.util.ArrayList;

import javax.swing.*;
import javax.swing.border.EmptyBorder;
import javax.swing.border.LineBorder;

import cata_frutas.Terreno_Teste.Botoes;

public class Frame extends JFrame {

	private static final long serialVersionUID = 1L;
	private JPanel painel1;
	private JPanel painelini;
	public JLabel logo;
	public Color cor1 = new Color(255,238,138);
	public Color cor2 = new Color(0,0,0);
	public LineBorder borda1 = new LineBorder(cor2);
	public LineBorder borda2 = new LineBorder(cor1);
	public ArrayList<Botoes> listaBotoes;
	private JPanel painelIJ;
	public Botoes botaoM;
	
	
	class Botoes extends JButton{
		/**
		 * 
		 */
		private static final long serialVersionUID = 1L;
		public String text;
		public Color cor1;
		public Color cor2;
		public LineBorder borda1;
		public LineBorder borda2;
		
		
		public Botoes(String text, Color cor1, Color cor2, LineBorder borda1, LineBorder borda2, int x, int y) {
			this.text = text;
			this.cor1 = cor1;
			this.cor2 = cor2;
			this.borda1 = borda1;
			this.borda2 = borda2;
		
			this.setText(text);
			this.setBackground(cor1);
			this.setForeground(cor2);
			this.setBorder(borda1);
			this.setBounds(x, y, 120, 40);
			this.setFocusPainted(false);
			this.setFont(new Font("Segoe UI Semibold", Font.ITALIC, 12));
			this.hover();
			
			
		}
		
		
		
		public void update(Color cor1, Color cor2, LineBorder borda1, LineBorder borda2) {
			this.cor1 = cor1;
			this.cor2 = cor2;
			this.borda1 = borda1;
			this.borda2 = borda2;
			
			this.setBackground(cor1);
			this.setForeground(cor2);
			this.setBorder(borda1);
			this.hover();
		}
		
		
		public void hover() {
			this.addMouseListener(new MouseAdapter() {
	            @Override
	            public void mouseEntered(MouseEvent e) {
	                // Alterar a cor ao passar o mouse (hover)
	                Botoes.this.setBackground(Botoes.this.cor2);
	                Botoes.this.setForeground(Botoes.this.cor1);
	                Botoes.this.setBorder(Botoes.this.borda2);
	            }

	            @Override
	            public void mouseExited(MouseEvent e) {
	                // Voltar Ã  cor original quando o mouse sair
	            	Botoes.this.setBackground(Botoes.this.cor1);
	            	Botoes.this.setForeground(Botoes.this.cor2);
	            	Botoes.this.setBorder(Botoes.this.borda1);
	            }
			});
		}
		
		public void mode(ArrayList<Botoes> listaBotoes) {
			painel1.setBackground(this.cor2);
			painelini.setBackground(this.cor2);
			painelIJ.setBackground(this.cor2);
			logo.setForeground(cor1);
			for(int i = 0; i < listaBotoes.size(); i++) {
				listaBotoes.get(i).update(cor2, cor1, borda2, borda1);
			}
		}
		
	}

	
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Frame frame = new Frame();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public Frame() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setSize(600, 400);
		setLocationRelativeTo(null);
		addComponentListener(new ComponentAdapter() {
            @Override
            public void componentResized(ComponentEvent e) {
            	int xbtn = (int) (painel1.getWidth()/2) - 75;
        		int ybtn = (int) (painel1.getHeight()/2 - 130);
        		updatePos(listaBotoes, xbtn, ybtn);
            }
        });
		
		inicializa();
		
		
	}
	
	public void inicializa() {
		painel1 = new JPanel();
		painel1.setBorder(new EmptyBorder(5, 5, 5, 5));
		painel1.setBackground(cor1);
		painel1.setBounds(0, 0, 600, 400);
		painel1.setLayout(new BorderLayout(0, 0));
		
		logo = new JLabel("Cata Frutas");
		logo.setHorizontalAlignment(SwingConstants.CENTER);
		logo.setFont(new Font("Georgia", Font.ITALIC, 48));
		logo.setForeground(cor2);
		logo.setIcon(null);
		logo.setBounds(10, 10, painel1.getX(), painel1.getY());
		painel1.add(logo, BorderLayout.NORTH);
		
		
		painelini = new JPanel();
		painelini.setBackground(new Color(255, 238, 138));
		painelini.setLayout(null);
		painel1.add(painelini, BorderLayout.CENTER);
		
		
		painelIJ = new JPanel();
		painelIJ.setLayout(null);
		painelIJ.setBackground(painel1.getBackground());
		
		
		
		setContentPane(painel1);
		
		listaBotoes = new ArrayList<Botoes>();
		
		
		int xbtn = (int) (painel1.getWidth()/2) - 75;
		int ybtn = (int) (painel1.getHeight()/2 - 130);
		
		
		Botoes botaoIJ = new Botoes("Iniciar Jogo",cor1,cor2,borda1,borda2,xbtn,ybtn);
		listaBotoes.add(botaoIJ);
		botaoIJ.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
					botaoIJ.setBackground(botaoM.getBackground());
					botaoIJ.setForeground(botaoM.getForeground());
					botaoIJ.setBorder(botaoM.getBorder());
					comecaJogo();
				}
			});
		

		Botoes botaoMJ = new Botoes("Modos de Jogo",cor1,cor2,borda1,borda2,xbtn,ybtn + 42);
		listaBotoes.add(botaoMJ);
		
		Botoes botaoCT = new Botoes("Criar Terreno",cor1,cor2,borda1,borda2,xbtn,ybtn + 84);
		listaBotoes.add(botaoCT);
		
		botaoM = new Botoes("Light Mode",cor1,cor2,borda1,borda2,xbtn,ybtn + 126);
		listaBotoes.add(botaoM);
		botaoM.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
					if(botaoM.text.equals("Light Mode")){
						botaoM.mode(listaBotoes);
						botaoM.setText("Dark Mode");
						revalidate();
						repaint();
					}
					else{
						botaoM.mode(listaBotoes);
						botaoM.setText("Light Mode");
						revalidate();
						repaint();
					}
				}
			});
		
		Botoes botaoRI = new Botoes("Retornar",cor1,cor2,borda1,borda2,0,0);
		listaBotoes.add(botaoRI);
		painelIJ.add(botaoRI);
		botaoRI.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				botaoRI.setBackground(botaoM.getBackground());
				botaoRI.setForeground(botaoM.getForeground());
				botaoRI.setBorder(botaoM.getBorder());
				painel1.add(painelini, BorderLayout.CENTER);
				painel1.add(logo, BorderLayout.NORTH);
				painel1.remove(painelIJ);
				revalidate();
				repaint();
			}
		});
		
		for(int i = 0; i < 4; i++) {
			painelini.add(listaBotoes.get(i));
		}		
		
		
	}
	
	public void comecaJogo() {
		painel1.add(painelIJ, BorderLayout.CENTER);
		painel1.remove(logo);
		painel1.remove(painelini);
		revalidate();
		repaint();
		
	}
	
	public void updatePos(ArrayList<Botoes> lista, int xbtn, int ybtn) {
		for(int i = 0; i < 4; i++) {
			lista.get(i).setBounds(xbtn, ybtn + (i*42), lista.get(i).getWidth(), lista.get(i).getHeight());
		}
		revalidate();
		repaint();
	}

}
